//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GamePanel.QueueService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QueueService.IQueueService")]
    public interface IQueueService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Install", ReplyAction="http://tempuri.org/IQueueService/InstallResponse")]
        void Install(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/ReInstall", ReplyAction="http://tempuri.org/IQueueService/ReInstallResponse")]
        void ReInstall(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Delete", ReplyAction="http://tempuri.org/IQueueService/DeleteResponse")]
        void Delete(string abbr, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Start", ReplyAction="http://tempuri.org/IQueueService/StartResponse")]
        void Start(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Stop", ReplyAction="http://tempuri.org/IQueueService/StopResponse")]
        void Stop(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Restart", ReplyAction="http://tempuri.org/IQueueService/RestartResponse")]
        void Restart(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueueService/Update", ReplyAction="http://tempuri.org/IQueueService/UpdateResponse")]
        void Update(int serverId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueueServiceChannel : GamePanel.QueueService.IQueueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueueServiceClient : System.ServiceModel.ClientBase<GamePanel.QueueService.IQueueService>, GamePanel.QueueService.IQueueService {
        
        public QueueServiceClient() {
        }
        
        public QueueServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueueServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Install(int serverId) {
            base.Channel.Install(serverId);
        }
        
        public void ReInstall(int serverId) {
            base.Channel.ReInstall(serverId);
        }
        
        public void Delete(string abbr, int serverId) {
            base.Channel.Delete(abbr, serverId);
        }
        
        public void Start(int serverId) {
            base.Channel.Start(serverId);
        }
        
        public void Stop(int serverId) {
            base.Channel.Stop(serverId);
        }
        
        public void Restart(int serverId) {
            base.Channel.Restart(serverId);
        }
        
        public void Update(int serverId) {
            base.Channel.Update(serverId);
        }
    }
}
